#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.0b1 on Wed Feb  7 01:09:22 2018
#

import wx
import mysql.connector
from random import randint

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((470, 393))
        self.adresip = wx.TextCtrl(self, wx.ID_ANY, "127.0.0.1")
        self.port = wx.TextCtrl(self, wx.ID_ANY, "3306")
        self.nick = wx.TextCtrl(self, wx.ID_ANY, "Anonim")
        self.start = wx.Button(self, wx.ID_ANY, "START")
        self.button_1 = wx.Button(self, wx.ID_ANY, "RANKING")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.Start, self.start)
        self.Bind(wx.EVT_BUTTON, self.Ranking, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("oknoMain")
        self.start.SetFont(wx.Font(20, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.SetBackgroundColour(wx.Colour(255, 255, 255))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.GridSizer(1, 1, 0, 0)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_5 = wx.GridSizer(0, 2, 0, 0)
        label_5 = wx.StaticText(self, wx.ID_ANY, "Adres IP: ", style=wx.ALIGN_RIGHT)
        grid_sizer_5.Add(label_5, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_5.Add(self.adresip, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_6 = wx.StaticText(self, wx.ID_ANY, "Port: ", style=wx.ALIGN_RIGHT)
        grid_sizer_5.Add(label_6, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_5.Add(self.port, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_7 = wx.StaticText(self, wx.ID_ANY, "Pseudonim: ", style=wx.ALIGN_RIGHT)
        grid_sizer_5.Add(label_7, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_5.Add(self.nick, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(grid_sizer_5, 3, wx.EXPAND, 0)
        sizer_3.Add(self.start, 1, wx.ALL | wx.EXPAND, 0)
        sizer_3.Add(self.button_1, 0, wx.EXPAND, 0)
        sizer_1.Add(sizer_3, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def Start(self, event):  # wxGlade: MyFrame.<event_handler>
        file = open('ustawienia.txt','w+')
        file.write(self.adresip.GetValue()+'\n')
        file.write(self.port.GetValue()+'\n')
        file.write(self.nick.GetValue())
        file.close()
        global frame1
        frame1 = MyFrame1(None, wx.ID_ANY, "")
        frame1.Show()
        frame.Hide()
        event.Skip()

    def Ranking(self, event):
        cnx = mysql.connector.connect(host=self.adresip.GetValue(),port=self.port.GetValue(),user='user',password='', database='ps')
        cursor = cnx.cursor()
        query = ("SELECT Nick, Wynik FROM rekordy ORDER BY Wynik DESC LIMIT 10")
        cursor.execute(query)
        rekordy = cursor.fetchall()
        frekordy = ''
        for x in range(1, 11):
            frekordy += str(x) +'.   ' + rekordy[x-1][0] + '   ' + str(rekordy[x-1][1]) + '\n'
        dlg = wx.MessageDialog(None, frekordy, 'TABELA REKORDÓW', wx.OK)
        dlg.ShowModal()
        dlg.Destroy()
        frame.Show()
        cursor.close()
        cnx.close()
        
        
# end of class MyFrame

class MyFrame1(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame1.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.pytanie = wx.StaticText(self, wx.ID_ANY, '', style=wx.ALIGN_CENTER)
        self.punkty = wx.StaticText(self, wx.ID_ANY, '0', style=wx.ALIGN_LEFT)
        self.ukryty = wx.StaticText(self, wx.ID_ANY, '0', style=wx.ALIGN_CENTER)
        self.ukryty.Hide()
        self.odp_a = wx.Button(self, wx.ID_ANY, '')
        self.odp_b = wx.Button(self, wx.ID_ANY, '')
        self.odp_c = wx.Button(self, wx.ID_ANY, '')
        self.odp_d = wx.Button(self, wx.ID_ANY, '')

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.odpowiedz_a, self.odp_a)
        self.Bind(wx.EVT_BUTTON, self.odpowiedz_b, self.odp_b)
        self.Bind(wx.EVT_BUTTON, self.odpowiedz_c, self.odp_c)
        self.Bind(wx.EVT_BUTTON, self.odpowiedz_d, self.odp_d)
        # end wxGlade

        file = open('ustawienia.txt','r')
        adresip = file.readlines(1)
        adresip = adresip[0].strip()
        port = file.readlines(2)
        port = port[0].strip()
        global nick
        nick = file.readlines(3)
        print(nick)
        nick = nick[0].strip()
        file.close()
        global cnx
        global cursor
        cnx = mysql.connector.connect(host=adresip,port=port,user='user',password='', database='ps')
        cursor = cnx.cursor()
        global waznaFunkcja
        def waznaFunkcja(self):
            query = ("SELECT id_pytania FROM pytania ORDER BY id_pytania DESC LIMIT 1")
            cursor.execute(query)
            ilePytan = cursor.fetchall()
            randNum = randint(1, ilePytan[0][0])
            query = ("SELECT * FROM pytania WHERE id_pytania=" + str(randNum))
            cursor.execute(query)
            pytanieBaza = cursor.fetchall()
            pytanieBaza = pytanieBaza[0];
            print (pytanieBaza)
        
            self.pytanie.SetLabel(pytanieBaza[1])
            self.odp_a.SetLabel(pytanieBaza[2])
            self.odp_b.SetLabel(pytanieBaza[3])
            self.odp_c.SetLabel(pytanieBaza[4])
            self.odp_d.SetLabel(pytanieBaza[5])
            self.ukryty.SetLabel(str(pytanieBaza[6]))
        waznaFunkcja(self)
        

    def __set_properties(self):
        # begin wxGlade: MyFrame1.__set_properties
        self.SetTitle("Quiz")
        self.SetBackgroundColour(wx.Colour(255, 255, 255))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame1.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_4 = wx.GridSizer(0, 2, 0, 0)
        grid_sizer_3 = wx.GridSizer(0, 4, 0, 0)
        label_3 = wx.StaticText(self, wx.ID_ANY, "Punkty:", style=wx.ALIGN_RIGHT)
        grid_sizer_3.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT, 0)
        grid_sizer_3.Add(self.punkty, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add((0, 0), 0, 0, 0)
        grid_sizer_3.Add((0, 0), 0, 0, 0)
        sizer_2.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        sizer_2.Add(self.pytanie, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_4.Add(self.odp_a, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.odp_b, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.odp_c, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.odp_d, 0, wx.EXPAND, 0)
        sizer_2.Add(grid_sizer_4, 3, wx.EXPAND, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        self.SetSize((441, 318))
        # end wxGlade

    global dodajPunkt
    def dodajPunkt(self):
        intpunkty = int(self.punkty.GetLabel())
        intpunkty += 1
        self.punkty.SetLabel(str(intpunkty))

    global przegrana
    def przegrana(self):
        dlg = wx.MessageDialog(None, 'Przegrałeś!', 'GAME OVER', wx.OK | wx.ICON_EXCLAMATION)
        dlg.ShowModal()
        dlg.Destroy()
        query=("INSERT INTO rekordy (Nick, Wynik) VALUES ('"+nick+"', '" + self.punkty.GetLabel()+"')")
        cursor.execute(query)
        cnx.commit()
        frame.Show()
        frame1.Hide()
        cursor.close()
        cnx.close()
              

    def odpowiedz_a(self, event):  # wxGlade: MyFrame1.<event_handler>
        wybrana_odpowiedz='1'
        if wybrana_odpowiedz == self.ukryty.GetLabel():
            waznaFunkcja(self)
            dodajPunkt(self)
        else:
            przegrana(self)
        event.Skip()

    def odpowiedz_b(self, event):  # wxGlade: MyFrame1.<event_handler>
        wybrana_odpowiedz='2'
        if wybrana_odpowiedz == self.ukryty.GetLabel():
            waznaFunkcja(self)
            dodajPunkt(self)
        else:
            przegrana(self)
        event.Skip()
    def odpowiedz_c(self, event):  # wxGlade: MyFrame1.<event_handler>
        wybrana_odpowiedz='3'
        if wybrana_odpowiedz == self.ukryty.GetLabel():
            waznaFunkcja(self)
            dodajPunkt(self)
        else:
            przegrana(self)
        event.Skip()
    def odpowiedz_d(self, event):  # wxGlade: MyFrame1.<event_handler>
        wybrana_odpowiedz='4'
        if wybrana_odpowiedz == self.ukryty.GetLabel():
            waznaFunkcja(self)
            dodajPunkt(self)
        else:
            przegrana(self)
        event.Skip()

        

# end of class MyFrame1

if __name__ == "__main__":
    quiz = wx.PySimpleApp()
    frame = MyFrame(None, wx.ID_ANY, "")
    quiz.SetTopWindow(frame)
    frame.Show()
    quiz.MainLoop()
